@KERBALISM_EXPERIMENT_VALUES:NEEDS[Luciole,FeatureScience]
{
	%Luciole
	{
		StudentExperiment
		{
			size = 0.512
			duration = 146
		}
		CustomerExperiment
		{
			size = 1
			duration = 131
		}
		KSCExperiment
		{
			size = 0.640
			duration = 94
		}
	}
}

@EXPERIMENT_DEFINITION:HAS[#id[StudentExperiment]]:NEEDS[Luciole,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/Luciole/StudentExperiment/size$
	@dataScale /= #$baseValue$
	!requireAtmosphere = delete
	!situationMask = delete
	!biomeMask = delete
	
	KERBALISM_EXPERIMENT
	{
		BodyAllowed = HomeBodyAndMoons
		Situation = Surface@Biomes
		Situation = FlyingLow@Biomes 
		Situation = InSpaceLow@VirtualBiomes
		Situation = SrfLanded@Biomes
		Situation = SrfSplashed@Biomes
		VirtualBiome = NoBiome
		VirtualBiome = Storm
		VirtualBiome = NorthernHemisphere
		VirtualBiome = SouthernHemisphere
 	}
}

@EXPERIMENT_DEFINITION:HAS[#id[CustomerExperiment]]:NEEDS[Luciole,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/Luciole/CustomerExperiment/size$
	@dataScale /= #$baseValue$
	!requireAtmosphere = delete
	!situationMask = delete
	!biomeMask = delete
	
	KERBALISM_EXPERIMENT
	{
		BodyAllowed = Planets
		BodyAllowed = Moons
		BodyNotAllowed = Suns
		Situation = Surface@Biomes
		Situation = FlyingLow@Biomes 
		Situation = InSpaceLow@Biomes
		Situation = InSpaceHigh@VirtualBiomes
		Situation = SrfLanded@Biomes
		Situation = SrfSplashed@Biomes
		VirtualBiome = NoBiome
		VirtualBiome = Storm
		VirtualBiome = NorthernHemisphere
		VirtualBiome = SouthernHemisphere
		VirtualBiome = InnerBelt
		VirtualBiome = OuterBelt
		VirtualBiome = Magnetosphere
		VirtualBiome = Interstellar
 	}
}

@EXPERIMENT_DEFINITION:HAS[#id[KSCExperiment]]:NEEDS[Luciole,FeatureScience]:FOR[zzzKerbalismDefault]
{
	@dataScale = #$@KERBALISM_EXPERIMENT_VALUES/Luciole/KSCExperiment/size$
	@dataScale /= #$baseValue$
	!requireAtmosphere = delete
	!situationMask = delete
	!biomeMask = delete
	
	KERBALISM_EXPERIMENT
	{
		BodyAllowed = HomeBodyAndMoons
		Situation = Surface@Biomes
		Situation = FlyingLow@Biomes 
		Situation = FlyingHigh@Biomes 
		Situation = InSpaceLow@VirtualBiomes
		Situation = InSpaceHigh@VirtualBiomes
		Situation = SrfLanded@Biomes
		Situation = SrfSplashed@Biomes
		VirtualBiome = NoBiome
		VirtualBiome = Storm
		VirtualBiome = NorthernHemisphere
		VirtualBiome = SouthernHemisphere
		VirtualBiome = InnerBelt
 	}
}

@PART[_Luciole_cubesat_3u_03125]:NEEDS[Luciole,FeatureScience]:AFTER[zzzKerbalismDefault]
{
	!MODULE[Sensor],* {}
	!MODULE[*ModuleScience*],* {}
	!MODULE[Experiment],* {}
	MODULE
	{
		name = Experiment
		experiment_id = kerbalism_TELEMETRY
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ECCost$
		%requires = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ResourceRates$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/CrewRequirement$ 
	} 
	MODULE
	{
		name = Experiment
		experiment_id = StudentExperiment
		experiment_desc = Some nerds fiddled this out.
		data_rate = #$@KERBALISM_EXPERIMENT_VALUES/Luciole/StudentExperiment/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/Luciole/StudentExperiment/duration$
		ec_rate = 0.042
		allow_shrouded = False
	}

	!MODULE[Configure],*:HAS[#title[Unmanned?Experiments]] {}
	MODULE
	{
		name = Configure
		title = L3U "Ked" CubeSat experiment
		SETUP
		{
			name = Telemetry Report
			desc = Allows the probe core to send back telemetry data.
			%tech = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupCost$
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = kerbalism_TELEMETRY
			}
		} 
		SETUP
		{
			name = Luciole Student Experiment
			desc = Installs the Luciole Student Experiment on the Science Instrument Unit, allowing you to perform several simple luminosity and magnetical scans.
			tech = engineering101
			mass = 0.005
			cost = 150
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = StudentExperiment
			}
		}
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}

		@slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/BaseSlots$
		UPGRADES
		{
			UPGRADE
			{
				name__ = Unmanned-Upgrade1
				techRequired__ = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradeTech$
				slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradedSlots$
			}
		}
	}
}

@PART[_Luciole_Probe_03125]:NEEDS[Luciole,FeatureScience]:AFTER[zzzKerbalismDefault]
{
	!MODULE[Sensor],* {}
	!MODULE[*ModuleScience*],* {}
	!MODULE[Experiment],* {}
	MODULE
	{
		name = Experiment
		experiment_id = kerbalism_TELEMETRY
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ECCost$
		%requires = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ResourceRates$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/CrewRequirement$ 
	} 
	MODULE
	{
		name = Experiment
		experiment_id = CustomerExperiment
		experiment_desc = The intentions are unclear.
		data_rate = #$@KERBALISM_EXPERIMENT_VALUES/Luciole/CustomerExperiment/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/Luciole/CustomerExperiment/duration$
		ec_rate = 0.064
		allow_shrouded = False
	}

	!MODULE[Configure],*:HAS[#title[Unmanned?Experiments]] {}
	MODULE
	{
		name = Configure
		title = L3T "BOT" Probe experiment
		SETUP
		{
			name = Telemetry Report
			desc = Allows the probe core to send back telemetry data.
			%tech = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupCost$
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = kerbalism_TELEMETRY
			}
		} 
		SETUP
		{
			name = Luciole Customer Experiment
			desc = Installs the Luciole Customer Experiment on the Science Instrument Unit, allowing you to perform several a little more sophisticated luminosity and magnetical scans.
			tech = miniaturization
			mass = 0.02
			cost = 500
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = CustomerExperiment
			}
		}
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}

		@slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/BaseSlots$
		UPGRADES
		{
			UPGRADE
			{
				name__ = Unmanned-Upgrade1
				techRequired__ = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradeTech$
				slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradedSlots$
			}
		}
	}
}

@PART[_Luciole_cubesat_6u_0625]:NEEDS[Luciole,FeatureScience]:AFTER[zzzKerbalismDefault]
{
	!MODULE[Sensor],* {}
	!MODULE[*ModuleScience*],* {}
	!MODULE[Experiment],* {}
	MODULE
	{
		name = Experiment
		experiment_id = kerbalism_TELEMETRY
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ECCost$
		%requires = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ResourceRates$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/CrewRequirement$ 
	} 
	MODULE
	{
		name = Experiment
		experiment_id = KSCExperiment
		experiment_desc = Make way for the real thing with this prototype.
		data_rate = #$@KERBALISM_EXPERIMENT_VALUES/Luciole/KSCExperiment/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/Luciole/KSCExperiment/duration$
		ec_rate = 0.047
		allow_shrouded = False
	}

	!MODULE[Configure],*:HAS[#title[Unmanned?Experiments]] {}
	MODULE
	{
		name = Configure
		title = L6U "Ker" CubeSat experiment
		SETUP
		{
			name = Telemetry Report
			desc = Allows the probe core to send back telemetry data.
			%tech = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupCost$
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = kerbalism_TELEMETRY
			}
		} 
		SETUP
		{
			name = Luciole KSC Experiment
			desc = Installs the Luciole KSC Experiment on the Science Instrument Unit, a test bed for the little more sophisticated luminosity and magnetical scans of the Luciole Customer Experiment.
			tech = basicScience
			mass = 0.015
			cost = 250
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = KSCExperiment
			}
		}
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}

		@slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/BaseSlots$
		UPGRADES
		{
			UPGRADE
			{
				name__ = Unmanned-Upgrade1
				techRequired__ = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradeTech$
				slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradedSlots$
			}
		}
	}
}

@PART[_Luciole_Avionics_0625]:NEEDS[Luciole,FeatureScience]:AFTER[zzzKerbalismDefault]
{
	!MODULE[Sensor],* {}
	MODULE
	{
		name = Sensor
		type = temperature
	} 

	!MODULE[*ModuleScience*],* {}
	!MODULE[Experiment],* {}
	MODULE
	{
		name = Experiment
		experiment_id = atmosphereAnalysis
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/requirements$
		%sample_collecting = True
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/duration$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/ResourceRates$
		%allow_shrouded = True 
	} 
	MODULE
	{
		name = Experiment
		experiment_id = kerbalism_TELEMETRY
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ECCost$
		%requires = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ResourceRates$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/CrewRequirement$ 
	} 

	!MODULE[Configure],*:HAS[#title[Unmanned?Experiments]] {}
	MODULE
	{
		name = Configure
		title = Unmanned Experiments
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}
		SETUP
		{
			name = Atmospheric Fluid Spectro-Variometer
			desc = Installs the Atmospheric Fluid Spectro-Variometer
			%tech = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/SpectroVariometer/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/SpectroVariometer/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/SpectroVariometer/SetupCost$
 			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = atmosphereAnalysis
			}
		} 
		SETUP
		{
			name = Telemetry Report
			desc = Allows the probe core to send back telemetry data.
			%tech = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupCost$
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = kerbalism_TELEMETRY
			}
		} 

		@slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/BaseSlots$
		UPGRADES
		{
			UPGRADE
			{
				name__ = Unmanned-Upgrade1
				techRequired__ = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradeTech$
				slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradedSlots$
			}
		}
	}
}

@PART[_Luciole_KickStage_0625]:NEEDS[Luciole,FeatureScience]:AFTER[zzzKerbalismDefault]
{
	!MODULE[Sensor],* {}
	MODULE
	{
		name = Sensor
		type = temperature
	} 

	!MODULE[*ModuleScience*],* {}
	!MODULE[Experiment],* {}
	MODULE
	{
		name = Experiment
		experiment_id = atmosphereAnalysis
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/requirements$
		%sample_collecting = True
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/duration$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/atmosphereAnalysis/ResourceRates$
		%allow_shrouded = True 
	} 
	MODULE
	{
		name = Experiment
		experiment_id = kerbalism_TELEMETRY
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ECCost$
		%requires = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ResourceRates$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/CrewRequirement$ 
	} 

	!MODULE[Configure],*:HAS[#title[Unmanned?Experiments]] {}
	MODULE
	{
		name = Configure
		title = Unmanned Experiments
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}
		SETUP
		{
			name = Atmospheric Fluid Spectro-Variometer
			desc = Installs the Atmospheric Fluid Spectro-Variometer
			%tech = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/SpectroVariometer/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/SpectroVariometer/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/SpectroVariometer/SetupCost$
 			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = atmosphereAnalysis
			}
		} 
		SETUP
		{
			name = Telemetry Report
			desc = Allows the probe core to send back telemetry data.
			%tech = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupCost$
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = kerbalism_TELEMETRY
			}
		} 

		@slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/BaseSlots$
		UPGRADES
		{
			UPGRADE
			{
				name__ = Unmanned-Upgrade1
				techRequired__ = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradeTech$
				slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradedSlots$
			}
		}
	}
}

@PART[_Luciole_Fairing_0625]:NEEDS[Luciole,FeatureScience]:AFTER[zzzKerbalismDefault]
{
	!MODULE[Sensor],* {}
	MODULE
	{
		name = Sensor
		type = pressure
	}

	!MODULE[*ModuleScience*],* {}
	!MODULE[Experiment],* {}
	MODULE
	{
		name = Experiment
		experiment_id = barometerScan
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/duration$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/requirements$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/ResourceRates$
		%allow_shrouded = True 
	}		 
	MODULE
	{
		name = Experiment
		experiment_id = kerbalism_TELEMETRY
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ECCost$
		%requires = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ResourceRates$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/CrewRequirement$ 
	} 

	!MODULE[Configure],*:HAS[#title[Unmanned?Experiments]] {}
	MODULE
	{
		name = Configure
		title = Unmanned Experiments
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}
		SETUP
		{
			name = PresMat Barometer
			desc = Installs the PresMat Barometer.
			%tech = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/PresMatBarometer/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/PresMatBarometer/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/PresMatBarometer/SetupCost$
 			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = barometerScan
			}
		} 
		SETUP
		{
			name = Telemetry Report
			desc = Allows the probe core to send back telemetry data.
			%tech = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupCost$
 			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = kerbalism_TELEMETRY
			}
		} 

		@slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/BaseSlots$
		UPGRADES
		{
			UPGRADE
			{
				name__ = Unmanned-Upgrade1
				techRequired__ = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradeTech$
				slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradedSlots$
			}
		}
	}
}

@PART[_Luciole_Fairing_07]:NEEDS[Luciole,FeatureScience]:AFTER[zzzKerbalismDefault]
{
	!MODULE[Sensor],* {}
	MODULE
	{
		name = Sensor
		type = pressure
	}

	!MODULE[*ModuleScience*],* {}
	!MODULE[Experiment],* {}
	MODULE
	{
		name = Experiment
		experiment_id = barometerScan
		%ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/ECCost$
		%data_rate = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/size$
		@data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/duration$
		%requires = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/requirements$
		%resources = #$@KERBALISM_EXPERIMENT_VALUES/STOCK/barometerScan/ResourceRates$
		%allow_shrouded = True 
	}		 
	MODULE
	{
		name = Experiment
		experiment_id = kerbalism_TELEMETRY
		%ec_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ECCost$
		%requires = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/requirements$
		%data_rate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/size$
		@data_rate /= #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/duration$
		%resources = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/ResourceRates$
		%crew_operate = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/CrewRequirement$ 
	} 

	!MODULE[Configure],*:HAS[#title[Unmanned?Experiments]] {}
	MODULE
	{
		name = Configure
		title = Unmanned Experiments
		SETUP
		{
			name = None
			desc = Empty slot for mass and cost savings, should you not require any experiments installed.
		}
		SETUP
		{
			name = PresMat Barometer
			desc = Installs the PresMat Barometer.
			%tech = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/PresMatBarometer/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/PresMatBarometer/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/ATMO_EXPERIMENTS/PresMatBarometer/SetupCost$
 			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = barometerScan
			}
		} 
		SETUP
		{
			name = Telemetry Report
			desc = Allows the probe core to send back telemetry data.
			%tech = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/UnlockTech$
			%mass = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupMass$
			%cost = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/TelemetryReport/SetupCost$
			MODULE
			{
				type = Experiment
				id_field = experiment_id
				id_value = kerbalism_TELEMETRY
			}
		} 

		@slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/BaseSlots$
		UPGRADES
		{
			UPGRADE
			{
				name__ = Unmanned-Upgrade1
				techRequired__ = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradeTech$
				slots = #$@KERBALISM_GROUP_SETTINGS/UNMANNED_EXPERIMENTS/UpgradedSlots$
			}
		}
	}
}
